#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass PhDThesisLyX
\options a4paper,titlepage,12pt,numbered
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing onehalf
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 0
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\branch ChildOnly
\selected 1
\filename_suffix 0
\color #faf0e6
\end_branch
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle fancy
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\dev}{\operatorname{dev}}
{\mathrm{\mathrm{dev}}}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\tr}{\operatorname{tr}}
{\mathrm{\mathrm{tr}}}
\end_inset


\end_layout

\begin_layout Chapter
Introduction
\end_layout

\begin_layout Section
Background
\begin_inset CommandInset label
LatexCommand label
name "sec:Background"

\end_inset


\end_layout

\begin_layout Subsection*
Parabolic vs Hyperbolic Systems
\end_layout

\begin_layout Standard
Information in parabolic systems of partial differential equations travels
 at infinite speed, and a perturbation in the condition of the system at
 one point has an effect at all other points instantaneously.
 Thus, parabolic systems (such as the Navier-Stokes equations or the classical
 Fourier equations of heat transfer) are not amenable to parallelisation.
 By contrast, solutions to hyperbolic systems are wave-like in structure,
 with finite speeds of propagation of information.
 Solutions on different parts of the domain can be calculated independently,
 leveraging the great advances that have been made recently in parallel
 computing technologies, particularly in the burgeoning field of general
 purpose GPU computing.
 The use of hyperbolic models also allows for the utilisation of Riemann
 solvers, on which there has been a great deal of work over the years (see
 Toro 
\begin_inset CommandInset citation
LatexCommand cite
key "Toro2009"

\end_inset

 for a broad overview).
\end_layout

\begin_layout Standard
Even disregarding the practical benefit of employing hyperbolic schemes,
 there is the more profound issue that we live in a causal universe, and
 ultimately parabolic systems cannot be a 
\begin_inset Quotes eld
\end_inset

true
\begin_inset Quotes erd
\end_inset

 description of reality.
 Although this discrepancy often does not matter in practice, there are
 problems to which parabolic models are particularly unsuited (see 
\begin_inset CommandInset citation
LatexCommand cite
key "FukuamaMasafumi2013,Gomez2010,Gomez2007,Compte1997"

\end_inset

 among many others).
 Whilst an in-depth discussion of these issues is beyond the scope of this
 study, it should be noted that there are also philosophical problems with
 considering hyperbolic systems to be 
\begin_inset Quotes eld
\end_inset

true
\begin_inset Quotes erd
\end_inset

 descriptions of reality, as they can permit discontinuous solutions, and
 it can be argued that true discontinuities do not appear in nature.
 In any case, the continuum assumption of continuum mechanics is just a
 useful approximation to the actual underlying physical processes, and no
 model we devise will reflect completely the real nature of the phenomena
 that it purports to describe.
 It suffices to say that the causality issue regarding parabolic systems
 is more often troublesome than the issues relating specifically to hyperbolic
 systems.
\end_layout

\begin_layout Standard
In addition to the problems already discussed, in the case of the Navier-Stokes
 formulation in particular, the stress tensor is derived from empirical
 observation of the macroscopic behaviour of steady, homogeneous flows,
 rather than from a first-principles microscopic description.
 As shown by Yakhot 
\begin_inset CommandInset citation
LatexCommand cite
key "Yakhot"

\end_inset

, this can result in problems when modeling essentially unsteady and non-equilib
rium flow.
 On top of this, the NS equations are second order, making them more sensitive
 to the quality of the computational mesh than a first order system.
\end_layout

\begin_layout Standard
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "z"
symbol "NS"
description "Navier-Stokes	"

\end_inset


\end_layout

\begin_layout Standard
Several attempts to produce a hyperbolic formulation of viscous fluid dynamics
 have been made (see for example 
\begin_inset CommandInset citation
LatexCommand cite
key "Bampi1980,Geroch1995,Gomez2007,Israel1979,Montecinos2014,Nishikawa2010,Romatschke2010"

\end_inset

).
 However, as noted by Peshkov and Romenski 
\begin_inset CommandInset citation
LatexCommand cite
key "Peshkov2016"

\end_inset

, the systems described all essentially take the following form for some
 model-specific dissipative quantity 
\begin_inset Formula $X$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\dot{X}=-\frac{1}{\beta}\left(X-X_{NS}\right)
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $\beta$
\end_inset

 is a relaxation parameter and 
\begin_inset Formula $X_{NS}$
\end_inset

 is the value obtained from the Navier-Stokes equations.
 This is a hyperbolic relaxation model, constructed as a first-order extension
 to the second order NS equations.
\end_layout

\begin_layout Standard
These models are all based on the series expansion of the distribution function
 with respect to a set of moments.
 The physical meanings of the moments are largely ignored, and they have
 neither microscopic counterparts, nor are they defined as volume-averaged
 quantities.
 Additionally, a naive model of the form above is not frame invariant.
 Often this is remedied by introducing an objective stress rate 
\begin_inset Formula $\dot{X}$
\end_inset

, but as this can be defined in many ways, this results in different solutions
 to the model, along with violation of the second law of thermodynamics
 and loss of well-posedness of the initial value problem 
\begin_inset CommandInset citation
LatexCommand cite
key "Peshkov2016"

\end_inset

.
\end_layout

\begin_layout Standard
The recently proposed model of Peshkov and Romenski (described in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "sec:Mathematical Models"

\end_inset

) benefits from the advantages of hyperbolicity, while avoiding the deficits
 inherent in the existing hyperbolic models.
 It is derived fundamentally from a microscopic description of the continuum
 phenomena it describes.
 It is also able to model different materials and phases of matter in the
 same framework.
 This feature makes it well-suited to simulating the process of cookoff,
 to be described next.
\end_layout

\begin_layout Subsection*
Cookoff
\end_layout

\begin_layout Standard
The term 
\begin_inset Quotes eld
\end_inset

cookoff
\begin_inset Quotes erd
\end_inset

 is used to denote the process by which explosives deflagrate or detonate
 unintentionally, due to ambient heat from the surrounding environment.
 It is imperative that this process is properly understood, to avoid repeats
 of the many fatal and destructive civil and military accidents that have
 occurred over the years.
\end_layout

\begin_layout Standard
Cookoff is extremely complicated, with many different stages.
 Many different materials and phases may be present at the same time.
 Large costs, difficulty in experimental design, and safety issues mean
 that computational modeling has become of paramount importance in predicting
 the cookoff behaviour of different materials in different scenarios.
 Computational modeling presents a whole new set of challenges, however.
\end_layout

\begin_layout Standard
Despite extensive algorithmic optimisation, computational techniques such
 as adaptive mesh refinement, and a roughly 1000-fold increase in maximum
 attained computing power between 2006 and 2016 (~100 TFlop/s - ~100PFlop/s
 
\begin_inset CommandInset citation
LatexCommand cite
key "TOP500"

\end_inset

), cookoff simulations remain relatively computationally challenging.
 As detailed by Asay 
\begin_inset CommandInset citation
LatexCommand cite
key "Asay2010"

\end_inset

, we are still a long way from being able to perform accurate large-scale
 simulations of the full systems of equations governing such phenomena on
 less than a time scale on the order of days.
 It is noted that computational error is linearly dependent on domain size,
 and CPU time depends nonlinearly.
 Thus an increase of 3 orders of magnitude in computational power yields
 only a tenfold decrease in error in 2D simulations, and a decrease of only
 5.6 times in 3D.
 There is a clear need for new fundamentally-different ways of reducing
 the computational effort required.
\end_layout

\begin_layout Standard
If the time step of the computational method used to model cookoff is restricted
 by a CFL condition based on the speed of sound, the heating phase will
 take an excessively long time to calculate, even though the dominating
 process is thermal conduction; a slow, smooth process.
 A strict CFL condition will be required to accurately resolve the deflagration/
detonation phase, but this phase represents a small fraction of the total
 time.
 There have been several attempts to circumvent this issue, described here.
\end_layout

\begin_layout Standard
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "z"
symbol "CFL"
description "Courant–Friedrichs–Lewy"

\end_inset


\end_layout

\begin_layout Standard
Selesovský 
\begin_inset CommandInset citation
LatexCommand cite
key "Selesovsky2010"

\end_inset

 models the thermal loading of explosives using the Frank-Kamenetskii model
 of thermal conduction with Arrhenius reaction kinetics 
\begin_inset CommandInset citation
LatexCommand cite
key "Frank1955"

\end_inset

 (disregarding the non-conductive features of the process, such as flow
 and acoustics).
 The time step in the heating phase is chosen according to a standard stability
 condition according to the parabolic nature of the system.
 Once thermal runaway occurs, the time step is reduced by an amount obtained
 through trial-and-error (building upon results from Sućeska and Matečić-Muśanić
 
\begin_inset CommandInset citation
LatexCommand cite
key "Suceska2004"

\end_inset

) ensuring that the latter stages of the process are resolved correctly.
 This reduction is not actually required for numerical stability; it is
 required for accuracy.
 Clearly, it is not desirable to obtain the time step experimentally for
 every reactive process one wishes to model.
\end_layout

\begin_layout Standard
A huge amount of the work on cookoff modeling has been performed at the
 Lawrence Livermore (and to a lesser extent, Sandia) National Laboratories.
 Much of the work at LLNL has gone into their ALE3D multiphysics code 
\begin_inset CommandInset citation
LatexCommand cite
key "ALE3D"

\end_inset

.
 One of the methods employed in the ALE3D code to circumvent the time step
 restriction in the heating phase is variable mass scaling.
 Implemented by Yoh et al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Yoh2003,Yoh2003a,Yoh2004"

\end_inset

, this technique is based on the work of Prior 
\begin_inset CommandInset citation
LatexCommand cite
key "Prior1994"

\end_inset

.
 The system is integrated explicitly and the density of the materials in
 the system is scaled higher so as to reduce the effective speed of sound,
 and thus artificially increase the time step permitted by the standard
 CFL condition.
 In practice, the desired time step is fixed and the density is scaled to
 its required value.
 At the transition between the heating and combustion phases, the scaling
 is reduced incrementally to its natural value.
 Despite its success in increasing the computational efficiency of the calculati
ons - especially when inertia effects are negligible - this technique appears
 to have fallen out of favour in recent years in simulations involving large
 amounts of fluid flow, owing to the associated spurious oscillations in
 the motions of the heated materials detailed by Howard et al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Howard2006"

\end_inset

.
 It is still used in more static thermal heating problems (see for example
 Khairallah and Anderson 
\begin_inset CommandInset citation
LatexCommand cite
key "Khairallah2014"

\end_inset

, who obtain a 3- to 10-fold speed up using this method).
\end_layout

\begin_layout Standard
Lately, a different method has been used by Nichols and Schofield 
\begin_inset CommandInset citation
LatexCommand cite
key "Nichols2014"

\end_inset

 and McClelland et al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Mcclelland2014"

\end_inset

.
 In the heating phase, the fluid is modeled with the incompressible Navier-Stoke
s equations, which are solved using the semi-implicit pressure projection
 method presented by Gresho 
\begin_inset CommandInset citation
LatexCommand cite
key "Gresho1990a,Gresho1990"

\end_inset

.
 This removes the stringent CFL condition based on the speed of sound.
 Although each iteration is more computationally taxing, much larger time
 steps can be taken than with an explicit solution method.
 At each step, the advection of the reactive species is calculated with
 an explicit forward Euler scheme and its diffusion is calculated with an
 implicit backward Euler scheme.
 Only one iteration of both of these schemes is performed at each step,
 meaning that the time step for all processes is in fact limited by a CFL
 condition based on the velocity of the fluid.
 These velocities tend to be small in slow cookoff situations, leading to
 a large time step at this stage.
 
\begin_inset Formula $C_{cfl}=0.1$
\end_inset

 was used in the cited studies.
 The system governing the chemical reaction is also iterated at each time
 step.
 
\end_layout

\begin_layout Standard
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "a"
symbol "$C_{cfl}$"
description "Courant number"

\end_inset


\end_layout

\begin_layout Standard
In the early stages of the simulation the aforementioned method is efficient,
 but as the material heats up the time step will reduce to the point that
 it is faster to perform a full explicit calculation at each step.
 This was determined experimentally in 
\begin_inset CommandInset citation
LatexCommand cite
key "Nichols2014"

\end_inset

 to occur roughly when the implicit time step is less than 100 times larger
 than the explicit time step.
 A complex transition to the explicit solver is then undertaken.
 Neighbouring nodal values for the chemical composition are linearly interpolate
d to give element-centred values.
 The density and internal energy are found iteratively from the average
 fluid pressure, the averaged temperature, and the compositional state.
 This is done as inconsistencies in these variables can be introduced in
 the preceding stages.
 The velocity field can become chaotic under the implicit solver so this
 is set to zero everywhere.
 Owing to the complexity of the transition, the CFL time step is reduced
 by a factor of 1000 to allow local equilibration of the system and to avoid
 any macro-scale aberrations.
\end_layout

\begin_layout Standard
This transition process introduces large changes to the system at the most
 critical point in determining its subsequent violent evolution.
 The time of transition and the time step reduction factor have to be set
 by trial-and-error, meaning that they may need to be tested for each new
 simulation set-up.
 A process of this sort will always be necessary, however, if the heating
 phase is solved implicitly.
 In addition to the schemes outlined here, in 
\begin_inset CommandInset citation
LatexCommand cite
key "Mcclelland2014"

\end_inset

 the diffusivity of the species was artificially increased (by trial-and-error)
 to avoid numerical instabilities.
 The fluid viscosity was also increased ten-fold to slow the flow and increase
 the time step given by the velocity CFL condition on the advection of the
 species.
 Clearly, adjustments such as these are not desirable.
\end_layout

\begin_layout Subsection*
Multiphase Systems
\end_layout

\begin_layout Standard
The definition of a multiphase system is slightly ambiguous in the literature.
 Here it will be taken to mean a system consisting of either two or more
 different materials (possibly in the same phase of matter), or two or more
 volumes of (possibly the same) material in different phases of matter.
 There are two aspects of multiphase systems that require attention: multiphase
 flow, and multiphase heat transfer.
 The latter becomes important when the phases are at different temperatures.
 In this study, the different phases will be assumed to be immiscible.
\end_layout

\begin_layout Standard
Without a unified model of continuum mechanics, capable of describing all
 phases in the same framework, different sets of equations may have to be
 used in the different regions occupied by different phases.
 These systems arise, for example, in fluid-structure interaction, or oil-water
 interfaces.
 An overview of current approaches to multiphase systems will now be given.
 The examples here are illustrative but not exhaustive.
\end_layout

\begin_layout Standard
There has been a huge amount of research activity in the field over the
 years, but current approaches can be broadly classified as either monolithic
 or partitioned 
\begin_inset CommandInset citation
LatexCommand cite
key "Hou2012"

\end_inset

.
 In a monolithic scheme, all phases are described by the same set of nonlinear
 equations.
 The evolution of the interfaces is implicit to the equations, unlike in
 partitioned schemes.
 See for example 
\begin_inset CommandInset citation
LatexCommand cite
key "Michler2004,Hubner2004"

\end_inset

.
 The system is solved by a multivariate Newton-type method.
 It is often ill-conditioned, due to the different scales of the state variables
 of the different phases.
 Thus, iterative solvers are required, proving inefficient unless good precondit
ioners are available.
 Codes tend to be very specialised to the specific problems they solve,
 and it requires expertise to develop and maintain such methods.
\end_layout

\begin_layout Standard
In a partitioned scheme, the states of the different phases are calculated
 separately at each time step, possibly using different models.
 See Rossi and Oñate 
\begin_inset CommandInset citation
LatexCommand cite
key "Rossi2010"

\end_inset

 for a recent overview of some of the common algorithmic features of these
 schemes.
 The individual systems do not suffer from the scaling-induced conditioning
 problems of monolithic schemes, but attention now needs to be payed to
 the material interfaces.
 Modeling them can be unstable and relatively computationally expensive
 (although typically not as expensive as solving the full monolithic systems).
 One of the great benefits of partitioned schemes is that legacy implementations
 of common models may be used in the domains occupied by materials that
 they describe.
 These implementations are often well-used and relatively bug free, and
 tend to be written efficiently for the kinds of problems that the solve.
 As an example of a software suite taking advantage of this, see the Caltech's
 Virtual Test Facility 
\begin_inset CommandInset citation
LatexCommand cite
key "Aivazis2000"

\end_inset

.
\end_layout

\begin_layout Standard
Under both types of schemes, the models describing the different phases
 may be formulated in either a Lagrangian, an Eulerian, or an ALE framework.
 Solids models tend to come in Lagrangian form, and often these are combined
 with ALE forms for the fluid phases, so that the fluid meshes may deform
 to match the deformation of the solid (see, for example, Pin et al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Pin2007"

\end_inset

).
 These schemes tend to be very accurate, but like all Lagrangian schemes,
 they fail if the meshes become highly contorted.
 Thus, adaptive remeshing is often necessary.
 Some authors have coupled a Lagrangian solid scheme with an Eulerian fluid
 scheme, but extra care must be taken when applying the boundary conditions
 to the interface, which corresponds to the intersection of the Eulerian
 and Lagrangian meshes (see Legay et al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Legay2006"

\end_inset

 for an implementation using level sets, or Fedkiw 
\begin_inset CommandInset citation
LatexCommand cite
key "Fedkiw2002"

\end_inset

 for a GFM coupling).
 Some authors, such as Ryzhakov et al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Ryzhakov2010"

\end_inset

, have found success in using the common Lagrangian formulations for the
 solid, and a reformulated Lagrangian model for the fluid, implementing
 the necessary adaptive remeshing.
 Yet another option is to model both the fluid and the solid in an Eulerian
 framework, although this now necessitates a level set method or volume
 of fluid method 
\begin_inset CommandInset citation
LatexCommand cite
key "Hirt1981"

\end_inset

 to track the interfaces.
 Also, these methods are more prone to losing small-scale geometric features
 of the media, unless methods such as AMR are employed to combat this 
\begin_inset CommandInset citation
LatexCommand cite
key "Hou2012"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "z"
symbol "ALE"
description "Arbitrary Lagrangian-Eulerian"

\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "z"
symbol "AMR"
description "Adaptive Mesh Refinement"

\end_inset


\end_layout

\begin_layout Standard
In a recently submitted paper, Michael and Nikiforakis 
\begin_inset CommandInset citation
LatexCommand cite
key "Michael"

\end_inset

 (building on the work of Schoch et al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Schoch2013"

\end_inset

) couple various Eulerian models of reactive and inert fluids and solids
 by use of a Riemann Ghost Fluid Method, with the ghost states calculated
 using specialised mixed-material Riemann solvers for each interaction (see
 
\begin_inset CommandInset ref
LatexCommand formatted
reference "sec:Ghost Fluid Methods"

\end_inset

).
 Whilst these techniques do not suffer from the mesh contortion issues inherent
 in Lagrangian formulations of continuum mechanics, and the interface coupling
 tends to be less computationally expensive than the iterative techniques
 demanded by monolithic schemes, a fair amount of theoretical work needs
 to be done to derive analytical relations describing the interactions between
 every pair of models used.
\end_layout

\begin_layout Standard
If it were possible to describe all phases with the same Eulerian model,
 this method could be used, with only one type of Riemann solver needed
 to cope with any multiphase problem posed.
 This would effectively be a partitioned scheme with the same system solved
 in each domain.
 The HPR model represents such an opportunity.
 As will be seen, the model also includes terms for heat conduction, which
 do not appear in the basic formulations of many of the common models used
 in multiphase systems (e.g.
 the Euler equations, or the Navier-Stokes equations).
 Heat conduction is often ignored in multiphase modeling, but such a framework
 based on the HPR model would almost unavoidably include it.
 It should be noted, though, that any unified model of continuum mechanics
 purporting to describe all phases of interest must be at least as descriptive
 as competing models tailored to each individual phase if the utmost model
 fidelity is required.
 Although the results for the HPR model applied to standard test cases have
 been promising, both here and in other preliminary studies 
\begin_inset CommandInset citation
LatexCommand cite
key "Dumbser2015,Boscheri2016"

\end_inset

, more work is required to determine how faithfully the HPR model reproduces
 common agreed phenomenological results.
\end_layout

\begin_layout Section
Purpose and Structure of this Study
\end_layout

\begin_layout Standard
The purpose of this study is to develop a hyperbolic framework for modeling
 cookoff, capable of describing multiple materials simultaneously.
 To this end, the HPR model of continuum mechanics is for the first time
 combined with a one-step Arrhenius reaction model and applied to several
 test problems.
 Within this framework, two major novel developments are also presented:
\end_layout

\begin_layout Enumerate
A method for simulating slow cookoff that doesn't suffer from the problems
 associated with existing methods, described in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "sec:Background"

\end_inset


\end_layout

\begin_layout Enumerate
A method for simulating material interfaces with the HPR model, permitting
 heat conduction across the interfaces when desired
\end_layout

\begin_layout Standard
The second development enables multimaterial simulations with the HPR model,
 performed here for the first time.
 It also presents a simpler option than the current methods of coupling
 different systems of equations described in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "sec:Background"

\end_inset

, as the HPR model is capable of describing solids and fluids (Newtonian
 and non-Newtonian).
\end_layout

\begin_layout Standard
The mathematical models used in this study are described in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "sec:Mathematical Models"

\end_inset

 and the background theory regarding ghost fluid methods (required for the
 second development described above) is detailed in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "sec:Ghost Fluid Methods"

\end_inset

.
 The numerical methods used in this study are described in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "chap:Numerical-Methods"

\end_inset

 and validated in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "chap:Validation-of-Numerical-Methods"

\end_inset

.
 
\begin_inset CommandInset ref
LatexCommand formatted
reference "chap:Theoretical-Results-and-Proposals"

\end_inset

 is solely composed of new theoretical material, including an explication
 of the two main developments of this study, and some more general mathematical
 results concerning the new framework proposed here.
 The feasibility of modeling combustive processes with the new framework
 is assessed numerically in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "chap:Numerical-Results-Cookoff"

\end_inset

.
 Development 1 is also tested here.
 Development 2 is tested numerically in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "chap:Numerical-Results-Multiphase-Systems"

\end_inset

.
 The numerical results are discussed in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "chap:Conclusions"

\end_inset

, where limitations and possible further improvements are suggested for
 the new methods presented.
 For completeness and reproducibility, the analytic forms of various quantities
 and the HPR system matrices are given in the appendices.
\end_layout

\begin_layout Standard
Owing to restrictions on time, only fluids were modeled within the new framework.
 Thus, 
\begin_inset Quotes eld
\end_inset

cookoff
\begin_inset Quotes erd
\end_inset

 refers here strictly to gaseous cookoff, and the multiphase problems encountere
d are strictly multimaterial problems.
 It is envisioned, however, that an extension of the results of this study
 to problems involving solids would be straightforward, and an explanation
 of how this would be achieved is given in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "chap:Conclusions"

\end_inset

.
\end_layout

\begin_layout Section
Mathematical Models
\begin_inset CommandInset label
LatexCommand label
name "sec:Mathematical Models"

\end_inset


\end_layout

\begin_layout Subsection*
The Model of Peshkov and Romenski
\end_layout

\begin_layout Standard
The HPR model, first introduced in Peshkov and Romenski 
\begin_inset CommandInset citation
LatexCommand cite
key "Peshkov2016"

\end_inset

 and expanded upon in Dumbser et al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Dumbser2015"

\end_inset

, takes the following form:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{subequations}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align}
\frac{\partial\rho}{\partial t}+\frac{\partial\left(\rho v_{k}\right)}{\partial x_{k}} & =0\label{eq:DensityEquation}\\
\frac{\partial\left(\rho v_{i}\right)}{\partial t}+\frac{\partial(\rho v_{i}v_{k}+p\delta_{ik}-\sigma_{ik})}{\partial x_{k}} & =0\label{eq:MomentumEquation}\\
\frac{\partial A_{ij}}{\partial t}+\frac{\partial\left(A_{ik}v_{k}\right)}{\partial x_{j}}+v_{k}\left(\frac{\partial A_{ij}}{\partial x_{k}}-\frac{\partial A_{ik}}{\partial x_{j}}\right) & =-\frac{\psi_{ij}}{\theta_{1}(\tau_{1})}\label{eq:DistortionEquation}\\
\frac{\partial\left(\rho J_{i}\right)}{\partial t}+\frac{\partial\left(\rho J_{i}v_{k}+T\delta_{ik}\right)}{\partial x_{k}} & =-\frac{\rho H_{i}}{\theta_{2}\left(\tau_{2}\right)}\label{eq:ThermalEquation}\\
\frac{\partial\left(\rho s\right)}{\partial t}+\frac{\partial\left(\rho sv_{k}+H_{k}\right)}{\partial x_{k}} & =\frac{\rho}{\theta_{1}\left(\tau_{1}\right)T}\psi_{kl}\psi_{kl}+\frac{\rho}{\theta_{2}\left(\tau_{2}\right)T}H_{k}H_{k}\label{eq:EntropyEquation}
\end{align}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{subequations}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "g"
symbol "$\\rho$"
description "Density"

\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "a"
symbol "$\\boldsymbol{v}$"
description "Velocity"

\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "a"
symbol "$p$"
description "Pressure"

\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "g"
symbol "$\\delta$"
description "Kronecker delta"

\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "g"
symbol "$\\sigma$"
description "Viscous shear stress tensor"

\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "a"
symbol "$A$"
description "Distortion tensor"

\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "a"
symbol "$\\boldsymbol{J}$"
description "Thermal impulse vector"

\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "a"
symbol "$T$"
description "Temperature"

\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "a"
symbol "$s$"
description "Entropy"

\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "g"
symbol "${\\tau}_{1}$"
description "Strain dissipation time"

\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "g"
symbol "${\\tau}_{2}$"
description "Thermal impulse dissipation time"

\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "a"
symbol "$E$"
description "Total specific energy"

\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "a"
symbol "$\\boldsymbol{q}$"
description "Heat flux vector"

\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "a"
symbol "$x$"
description "Space variable"

\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "a"
symbol "$t$"
description "Time variable"

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $\theta_{1}$
\end_inset

 and 
\begin_inset Formula $\theta_{2}$
\end_inset

 are positive scalar functions, and 
\begin_inset Formula $\psi=\frac{\partial E}{\partial A}$
\end_inset

 and 
\begin_inset Formula $\boldsymbol{H}=\frac{\partial E}{\partial\boldsymbol{J}}$
\end_inset

.
 Entropy does not decrease during the dissipative time evolution:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\frac{\partial\left(\rho s\right)}{\partial t}+\frac{\partial\left(\rho sv_{k}+H_{k}\right)}{\partial x_{k}}\geq0
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:EntropyEquation"

\end_inset

 can be replaced with the following equation, which will be used instead
 when solving the model in this study:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\frac{\partial\left(\rho E\right)}{\partial t}+\frac{\partial\left(\rho Ev_{k}+\left(p\delta_{ik}-\sigma_{ik}\right)v_{i}+q_{k}\right)}{\partial x_{k}}=0\label{eq:EnergyEquation}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:DensityEquation"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:MomentumEquation"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:DistortionEquation"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:ThermalEquation"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:EnergyEquation"

\end_inset

 can be written in the following form, with 
\begin_inset Formula $\boldsymbol{Q},\boldsymbol{F},\boldsymbol{B},\boldsymbol{S}$
\end_inset

 given in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "chap:Matrix Forms of the HPR Model"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand formatted
reference "chap:Explicit Forms of System Matrices"

\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\frac{\partial\boldsymbol{Q}}{\partial t}+\boldsymbol{\nabla}\cdot\boldsymbol{F}+\boldsymbol{B}\cdot\nabla\boldsymbol{Q}=\boldsymbol{S}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
The following definitions are given:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{subequations}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align}
p & =\rho^{2}\frac{\partial E}{\partial\rho}\label{eq:PressureDefinition}\\
\sigma & =-\rho A^{T}\frac{\partial E}{\partial A}\\
T & =\frac{\partial E}{\partial s}\\
\boldsymbol{q} & =\frac{\partial E}{\partial s}\frac{\partial E}{\partial\boldsymbol{J}}
\end{align}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{subequations}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
To close the system, the EOS must be specified, from which the above quantities
 and the sources can be derived.
 
\begin_inset Formula $E$
\end_inset

 is the sum of the contributions of the energies at the molecular scale
 (microscale), the material element
\begin_inset Foot
status open

\begin_layout Plain Layout
The concept of a 
\shape italic
material element
\shape default
 corresponds to that of a fluid parcel from fluid dynamics, applied to both
 fluids and solids.
\end_layout

\end_inset

 scale (mesoscale), and the flow scale (macroscale):
\end_layout

\begin_layout Standard
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "z"
symbol "EOS"
description "Equation of State"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
E=E_{1}\left(\rho,s\right)+E_{2}\left(A,\boldsymbol{J}\right)+E_{3}\left(\boldsymbol{v}\right)\label{eq:EnergyDefinition}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
In this study, 
\begin_inset Formula $E_{1}$
\end_inset

 will either be the ideal gas EOS:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
E_{1}=\frac{c_{0}^{2}}{\gamma\left(\gamma-1\right)}=\frac{\rho^{\gamma-1}e^{\frac{s}{c_{v}}}}{\gamma-1}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
or the stiffened gas EOS:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
E_{1}=\frac{c_{0}^{2}}{\gamma\left(\gamma-1\right)}\left(\frac{\rho}{\rho_{0}}\right)^{\gamma-1}e^{\frac{s}{c_{v}}}+\frac{\rho_{0}c_{0}^{2}-\gamma p_{\infty}}{\gamma\rho}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "a"
symbol "$c_0$"
description "Adiabatic speed of sound"

\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "a"
symbol "$c_p$"
description "Specific heat capacity at constant pressure"

\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "a"
symbol "$c_v$"
description "Specific heat capacity at constant volume"

\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "g"
symbol "$\\gamma$"
description "Ratio of specific heat capacities, equal to $\\frac{c_p}{c_v}$"

\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "a"
symbol "$p_\\infty$"
description "Pressure constant in stiffened gas equation of state"

\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "g"
symbol "$\\rho_0$"
description "Reference density"

\end_inset


\end_layout

\begin_layout Standard
Owing to the definition of the pressure, 
\begin_inset Formula $E_{1}$
\end_inset

 is thus given by:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
E_{1}=\frac{p+\gamma p_{\infty}}{\left(\gamma-1\right)\rho}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $p_{\infty}=0$
\end_inset

 for an ideal gas.
 The temperature is given by:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
T=\frac{p+p_{\infty}}{\left(\gamma-1\right)c_{v}\rho}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
and the speed of sound by:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
c_{0}=\sqrt{\frac{\gamma\left(p+p_{\infty}\right)}{\rho}}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $E_{2}$
\end_inset

 is chosen to have the following quadratic form:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
E_{2}=\frac{c_{s}^{2}}{4}\left\Vert \dev\left(G\right)\right\Vert _{F}^{2}+\frac{\alpha^{2}}{2}\left\Vert \boldsymbol{J}\right\Vert ^{2}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "a"
symbol "$c_s$"
description "Characteristic velocity of transverse perturbations"

\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "x"
symbol "$\\left\\Vert \\cdot\\right\\Vert $"
description "Euclidean vector norm"

\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "x"
symbol "${\\left\\Vert \\cdot\\right\\Vert}_F $"
description "Frobenius matrix norm"

\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "g"
symbol "$\\alpha$"
description "Constant related to characteristic velocity of heat waves"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\alpha$
\end_inset

 is a constant related to the characteristic velocity of propagation of
 heat waves:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
c_{h}=\frac{\alpha}{\rho}\sqrt{\frac{T}{c_{v}}}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "a"
symbol "$c_h$"
description "Characteristic velocity of heat waves"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $G=A^{T}A$
\end_inset

 is the Gramian matrix of the distortion tensor, and 
\begin_inset Formula $\dev\left(G\right)$
\end_inset

 is the deviator (trace-free part) of 
\begin_inset Formula $G$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\dev\left(G\right)=G-\frac{1}{3}\tr\left(G\right)I
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $E_{3}$
\end_inset

 is the usual specific kinetic energy per unit mass:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
E_{3}=\frac{1}{2}\left\Vert \boldsymbol{v}\right\Vert ^{2}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
The following forms are chosen:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{subequations}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align}
\theta_{1}\left(\tau_{1}\right) & =\frac{\tau_{1}c_{s}^{2}}{3\left|A\right|^{\frac{5}{3}}}\\
\theta_{2}\left(\tau_{2}\right) & =\tau_{2}\alpha^{2}\frac{\rho T_{0}}{\rho_{0}T}
\end{align}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{subequations}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "a"
symbol "$T_{0}$"
description "Reference temperature"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{subequations}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align}
\tau_{1} & =\frac{6\mu}{\rho_{0}c_{s}^{2}}\\
\tau_{2} & =\frac{\rho_{0}\kappa}{T_{0}\alpha^{2}}
\end{align}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{subequations}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "g"
symbol "$\\mu$"
description "Viscosity"

\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "g"
symbol "$\\kappa$"
description "Thermal conductivity"

\end_inset


\end_layout

\begin_layout Standard
The justification of these choices is that classical Navier–Stokes–Fourier
 theory is recovered in the stiff limit 
\begin_inset Formula $\tau_{1},\tau_{2}\rightarrow0$
\end_inset

 
\begin_inset CommandInset citation
LatexCommand cite
key "Dumbser2015"

\end_inset

.
 This results in the following relations:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{subequations}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align}
\sigma & =-\rho c_{s}^{2}G\dev\left(G\right)\\
\boldsymbol{q} & =\alpha^{2}T\boldsymbol{J}\\
-\frac{\psi}{\theta_{1}(\tau_{1})} & =-\frac{3}{\tau_{1}}\left|A\right|^{\frac{5}{3}}A\dev\left(G\right)\\
-\frac{\rho\boldsymbol{H}}{\theta_{2}\left(\tau_{2}\right)} & =-\frac{T\rho_{0}}{T_{0}\tau_{2}}\boldsymbol{J}
\end{align}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{subequations}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The following constraint also holds 
\begin_inset CommandInset citation
LatexCommand cite
key "Peshkov2016"

\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\det\left(A\right)=\frac{\rho}{\rho_{0}}\label{eq:determinantRestriction}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
The model as presented here has its roots in Godunov and Romenski's 1970s
 model of elastoplastic deformation 
\begin_inset CommandInset citation
LatexCommand cite
key "Godunov1974"

\end_inset

.
 The two models are very similar in structure.
 The differences lie in the physical interpretation of 
\begin_inset Formula $A$
\end_inset

, the appearance of algebraic source terms in the evolution equations for
 
\begin_inset Formula $A$
\end_inset

, and the inclusion of thermal conduction by the evolution of 
\begin_inset Formula $\boldsymbol{J}$
\end_inset

.
 Whereas the earlier model described only solids, the new model seeks to
 describe fluids as well.
 In the former, 
\begin_inset Formula $A$
\end_inset

 was viewed as describing the global deformation of the medium; it is now
 regarded as describing the local deformability of the material elements
 comprising the medium, containing information about their rotation and
 deformation.
 Unlike in previous continuum models, material elements have not only finite
 size, but also internal structure.
\end_layout

\begin_layout Standard
The strain dissipation time 
\begin_inset Formula $\tau_{1}$
\end_inset

 of the HPR model is a continuous analogue of Frenkel's 
\begin_inset Quotes eld
\end_inset

particle settled life time
\begin_inset Quotes erd
\end_inset

 
\begin_inset CommandInset citation
LatexCommand cite
key "jacovfrenkel1947"

\end_inset

; the characteristic time taken for a particle to move by a distance of
 the same order of magnitude as the particle's size.
 Thus, 
\begin_inset Formula $\tau_{1}$
\end_inset

 
\lang british
characterises
\lang english
 the time taken for a material element to rearrange with its neighbours.
 
\begin_inset Formula $\tau_{1}=\infty$
\end_inset

 for solids and 
\begin_inset Formula $\tau_{1}=0$
\end_inset

 for inviscid fluids.
 It is in this way that the HPR model seeks to describe all three major
 phases of matter, as long as a continuum description is appropriate for
 the material at hand.
\end_layout

\begin_layout Standard
The evolution equation for 
\begin_inset Formula $\boldsymbol{J}$
\end_inset

 and its contribution to the energy of the system are derived from Romenski's
 model of hyperbolic heat transfer, originally proposed in 
\begin_inset CommandInset citation
LatexCommand cite
key "Malyshev1984,Romenski1988"

\end_inset

 and implemented in 
\begin_inset CommandInset citation
LatexCommand cite
key "Romenski2007,Romenski2010"

\end_inset

.
 In this model, 
\begin_inset Formula $\boldsymbol{J}$
\end_inset

 is effectively defined as the variable conjugate to the entropy flux, in
 the sense that the latter is the derivative of the specific internal energy
 with respect to 
\begin_inset Formula $\boldsymbol{J}$
\end_inset

.
 Romenski remarks that it is more convenient to evolve 
\begin_inset Formula $\boldsymbol{J}$
\end_inset

 and 
\begin_inset Formula $E$
\end_inset

 than the heat flux or the entropy flux, and thus the equations take the
 form given here.
 
\begin_inset Formula $\boldsymbol{J}$
\end_inset

 can intuitively be thought of as a thermal analogue of momentum.
 
\begin_inset Formula $\tau_{2}$
\end_inset

 characterises the speed of relaxation of the thermal impulse due to heat
 exchange between material elements.
\end_layout

\begin_layout Subsection*
Modeling Reactive Processes
\end_layout

\begin_layout Standard
In this study, when modeling reactive gases, the following equation is introduce
d alongside 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:DensityEquation"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:MomentumEquation"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:DistortionEquation"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:ThermalEquation"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:EnergyEquation"

\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\frac{\partial\left(\rho\lambda\right)}{\partial t}+\frac{\partial\left(\rho\lambda v_{k}\right)}{\partial x_{k}}=-\rho\lambda K\left(T\right)
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "g"
symbol "$\\lambda$"
description "Concentration of reactive species"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $K$
\end_inset

 is the rate of reaction - a function of temperature, whose form depends
 on the type of reaction kinetics used.
 The EOS 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:EnergyDefinition"

\end_inset

 is modified to include:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
E_{r}\left(\lambda\right)=-Q_{c}\left(1-\lambda\right)
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "a"
symbol "$Q_c$"
description "Energy formed per unit mass of reactant"

\end_inset


\end_layout

\begin_layout Standard
In discrete ignition temperature reaction kinetics, no reaction occurs below
 the ignition temperature, 
\begin_inset Formula $T_{i}$
\end_inset

.
 Above 
\begin_inset Formula $T_{i}$
\end_inset

, the reaction proceeds at a constant rate 
\begin_inset Formula $K_{0}>0$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
K\left(T\right)=\begin{cases}
K_{0} & T\geq T_{i}\\
0 & T<T_{i}
\end{cases}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "a"
symbol "$T_i$"
description "Ignition temperature in discrete ignition temperature reaction kinetics"

\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "a"
symbol "$K_0$"
description "Reaction rate in discrete ignition temperature reaction kinetics"

\end_inset


\end_layout

\begin_layout Standard
A more sophisticated model of reaction kinetics was devised by Svante Arrhenius
 in 1889 
\begin_inset CommandInset citation
LatexCommand cite
key "arrhenius1889dissociationswarme,arrhenius1889reaktionsgeschwindigkeit"

\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
K\left(T\right)=B_{c}e^{-E_{a}/\left(R_{c}T\right)}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "a"
symbol "$R_c$"
description "Universal gas constant"

\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "a"
symbol "$B_c$"
description "Prefactor in Arrhenius reaction kinetics"

\end_inset


\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "a"
symbol "$E_a$"
description "Activation energy of a reactive species"

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $B_{c}$
\end_inset

 is some prefactor (with units of frequency), and 
\begin_inset Formula $E_{a}$
\end_inset

 is the activation energy of the reactive species.
 Often, the system is characterised by the dimensionless inverse activation
 energy:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\epsilon=\frac{R_{c}T_{0}}{E_{a}}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "g"
symbol "$\\epsilon$"
description "Dimensionless inverse activation energy"

\end_inset


\end_layout

\begin_layout Section
Ghost Fluid Methods
\begin_inset CommandInset label
LatexCommand label
name "sec:Ghost Fluid Methods"

\end_inset


\end_layout

\begin_layout Standard
Ghost fluid methods, combined with level set methods, are used to model
 the evolution of interfaces between different materials.
 They are detailed here, as it is with such a method that this study proposes
 to model the interfaces between different materials described by the HPR
 model.
\end_layout

\begin_layout Subsection*
Level Set Methods
\end_layout

\begin_layout Standard
Given a function 
\begin_inset Formula $f$
\end_inset

 on 
\begin_inset Formula $\mathbb{R}$
\end_inset

, the level set of 
\begin_inset Formula $f$
\end_inset

 at level 
\begin_inset Formula $c$
\end_inset

 is defined as:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\Gamma_{c}=\left\{ x:f\left(x\right)=c\right\} 
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Given velocity field 
\begin_inset Formula $v:\mathbb{R}\rightarrow\mathbb{R}$
\end_inset

, 
\begin_inset Formula $f$
\end_inset

 is advected according to the level set equation 
\begin_inset CommandInset citation
LatexCommand cite
key "Osher2002"

\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\frac{\partial f}{\partial t}=v\left|\frac{\partial f}{\partial x}\right|\label{eq:LevelSetEqn}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
The advection of a point in a fluid with velocity 
\begin_inset Formula $v$
\end_inset

 can be modeled by taking 
\begin_inset Formula $f=x-x_{0}$
\end_inset

 where 
\begin_inset Formula $x_{0}$
\end_inset

 is the position of the point at time 
\begin_inset Formula $t=0$
\end_inset

, and tracking 
\begin_inset Formula $\Gamma_{0}$
\end_inset

.
 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:LevelSetEqn"

\end_inset

 is solved by an appropriate numerical method.
 The numerical methods used in this study are described in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "chap:Numerical-Methods"

\end_inset

.
 
\begin_inset Formula $f$
\end_inset

 will usually have to be renormalised to resemble a straight line at every
 time step, to avoid unwanted distortions such as becoming a multivalued
 function.
\end_layout

\begin_layout Subsection*
The Original Ghost Fluid Method
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename GFM.png
	lyxscale 50
	width 50text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:OriginalGFMNoFix"

\end_inset

The Original Ghost Fluid Method
\end_layout

\end_inset


\begin_inset VSpace medskip
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The Original Ghost Fluid Method of Fedkiw et al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Fedkiw1999"

\end_inset

 (an adaptation of the work of Glimm et al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Glimm1981"

\end_inset

) is a numerical method for the Euler equations for simulating interfaces
 between multiple materials.
 The primitive variables for the Euler equations in 1D are given by 
\begin_inset Formula $\boldsymbol{P}=\left(\begin{array}{ccc}
\rho & v & p\end{array}\right)^{T}$
\end_inset

.
\end_layout

\begin_layout Standard
Suppose the interface between two fluids is modeled on spatial domain 
\begin_inset Formula $\left[0,1\right]$
\end_inset

, divided into 
\begin_inset Formula $N$
\end_inset

 cells with width 
\begin_inset Formula $\Delta x=\frac{1}{N}$
\end_inset

.
 Let the time step be 
\begin_inset Formula $\Delta t$
\end_inset

 and let 
\begin_inset Formula $\boldsymbol{P_{i}^{n}}$
\end_inset

 be the set of primitive variables in cell 
\begin_inset Formula $i$
\end_inset

 at time 
\begin_inset Formula $t_{n}=n\Delta t$
\end_inset

.
 Let the level set function 
\begin_inset Formula $f$
\end_inset

 have root 
\begin_inset Formula $x_{n}$
\end_inset

 where 
\begin_inset Formula $x_{n}\in\left[\text{\left(i+\frac{1}{2}\right)}\Delta x,\text{\left(i+\frac{3}{2}\right)}\Delta x\right]$
\end_inset

.
 Thus, at time 
\begin_inset Formula $t_{n}$
\end_inset

 the interface lies between the cells with primitive variables 
\begin_inset Formula $\boldsymbol{P_{i}^{n},P_{i+1}^{n}}$
\end_inset

.
 Define two sets of primitive variables:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\boldsymbol{P_{j}^{\left(1\right)}}=\begin{cases}
\boldsymbol{P_{j}^{n}} & j\leq i\\
\left(\begin{array}{ccc}
\rho\left(s_{i}^{n},p_{j}^{n},\gamma_{i}^{n}\right) & v_{j}^{n} & p_{j}^{n}\end{array}\right) & j>i
\end{cases}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\boldsymbol{P_{j}^{\left(2\right)}}=\begin{cases}
\boldsymbol{P_{j}^{n}} & j\geq i+1\\
\left(\begin{array}{ccc}
\rho\left(s_{i+1}^{n},p_{j}^{n},\gamma_{i+1}^{n}\right) & v_{j}^{n} & p_{j}^{n}\end{array}\right) & j<i+1
\end{cases}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
where:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\rho\left(s,p,\gamma\right)=\left(\frac{p}{s}\right)^{\frac{1}{\gamma}}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
All cells in 
\begin_inset Formula $\boldsymbol{P^{\left(1\right)}}$
\end_inset

 to the left of the interface have the same state variables as those of
 
\begin_inset Formula $\boldsymbol{P^{n}}$
\end_inset

.
 All cells to the right have the same pressure and velocity as their counterpart
s in 
\begin_inset Formula $\boldsymbol{P^{n}}$
\end_inset

, but the same entropy as 
\begin_inset Formula $\boldsymbol{P_{i}^{n}}$
\end_inset

.
 This affects their density.
 The situation is analogous for 
\begin_inset Formula $\boldsymbol{P^{\left(2\right)}}$
\end_inset

.
 This is demonstrated in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:OriginalGFMNoFix"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula $\boldsymbol{P^{\left(1\right)}},\boldsymbol{P^{\left(2\right)}}$
\end_inset

 are stepped forward by time step 
\begin_inset Formula $\Delta t$
\end_inset

 using a standard Eulerian method.
 
\begin_inset Formula $f$
\end_inset

 is advected using 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:LevelSetEqn"

\end_inset

, taking the velocity in each cell to be that of 
\begin_inset Formula $\boldsymbol{P^{n}}$
\end_inset

.
 Now let 
\begin_inset Formula $f\left(x_{n+1}\right)=0$
\end_inset

 where 
\begin_inset Formula $x_{n+1}\in\left[\left(k+\frac{1}{2}\right)\Delta x,\left(k+\frac{3}{2}\right)\Delta x\right]$
\end_inset

 for some 
\begin_inset Formula $k$
\end_inset

.
 Define:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\boldsymbol{P_{j}^{n+1}}=\begin{cases}
\boldsymbol{P_{j}^{\left(1\right)}} & j\leq k\\
\boldsymbol{P_{j}^{\left(2\right)}} & j>k
\end{cases}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
The rationale behind the original GFM is that in most applications, pressure
 and velocity are continuous across the interface, and thus the ghost cells
 may take the real pressure and velocity values.
 Entropy is generally discontinuous at a contact discontinuity, resulting
 in large truncation errors if a standard finite difference scheme is used
 to solve the system.
 Thus, entropy is extrapolated as a constant from the interface boundary
 cell into the ghost region.
\end_layout

\begin_layout Standard
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "z"
symbol "GFM"
description "Ghost Fluid Method"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename GFM2.png
	lyxscale 50
	width 50text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:OriginalGFMIsobaricFix"

\end_inset

The Original Ghost Fluid Method, with the isobaric fix
\end_layout

\end_inset


\begin_inset VSpace medskip
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Fedkiw et al.
 advised to use the 
\shape italic
isobaric fix
\shape default
 technique.
 This involves setting the entropy of cell 
\begin_inset Formula $i$
\end_inset

, and all cells in the right ghost region, to that of cell 
\begin_inset Formula $i-1$
\end_inset

, and setting the entropy of cell 
\begin_inset Formula $i+1$
\end_inset

, and all cells in the left ghost region, to that of cell 
\begin_inset Formula $i+2$
\end_inset

.
 This is demonstrated in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:OriginalGFMIsobaricFix"

\end_inset

.
\end_layout

\begin_layout Standard
Effectively, the ghost regions behave like they are composed of the same
 fluid as the regions they extend (as they have the same entropy), facilitating
 calculation of the next time step, but they have the same pressure and
 velocity profiles as the real fluids they replace, meaning the boundary
 conditions at the interface are upheld.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename RP.png
	lyxscale 50
	height 25theight%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:RiemannProblem"

\end_inset

The qualitative structure of the solution to the Riemann Problem, showing
 the different possible types of waves
\end_layout

\end_inset


\begin_inset VSpace medskip
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
The Riemann Ghost Fluid Method
\end_layout

\begin_layout Standard
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "z"
symbol "RGFM"
description "Riemann Ghost Fluid Method"

\end_inset


\end_layout

\begin_layout Standard
The Riemann Problem in its general form is the solution of the following
 initial value problem.
 Given a set of variables 
\begin_inset Formula $\boldsymbol{P}$
\end_inset

 dependent on space and time, and a hyperbolic set of equations which govern
 their spatio-temporal evolution, 
\begin_inset Formula $\boldsymbol{P}\left(x,t\right)$
\end_inset

 is sought for 
\begin_inset Formula $t>0$
\end_inset

, given the initial condition:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\boldsymbol{P}\left(x,0\right)=\begin{cases}
\boldsymbol{P_{L}} & x<0\\
\boldsymbol{P_{R}} & x>0
\end{cases}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "z"
symbol "RP"
description "Riemann Problem"

\end_inset


\end_layout

\begin_layout Standard
This problem is denoted by 
\begin_inset Formula $RP\left(\boldsymbol{P_{L}},\boldsymbol{P_{R}}\right)$
\end_inset

.
 Exact solvers exist for the Riemann Problem for various sets of governing
 equations, such as the Euler equations 
\begin_inset CommandInset citation
LatexCommand cite
key "Toro2009"

\end_inset

, the equations of non-linear elasticity 
\begin_inset CommandInset citation
LatexCommand cite
key "Barton2009"

\end_inset

, or the shallow water equations 
\begin_inset CommandInset citation
LatexCommand cite
key "Alcrudo2001"

\end_inset

, among others.
 There also exist approximate solvers for general conservative 
\begin_inset CommandInset citation
LatexCommand cite
key "Miller2004,Liu1975"

\end_inset

 or non-conservative 
\begin_inset CommandInset citation
LatexCommand cite
key "Dumbser2016"

\end_inset

 hyperbolic systems of PDEs.
 The references given here form a very small sample of the work that has
 been done in this area.
\end_layout

\begin_layout Standard
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
prefix "z"
symbol "PDE"
description "Partial Differential Equation"

\end_inset


\end_layout

\begin_layout Standard
The solution of the Riemann Problem usually takes the form of a set of waves,
 between which 
\begin_inset Formula $\boldsymbol{P}$
\end_inset

 is constant.
 The waves can either be a contact discontinuity (across which pressure
 and velocity are continuous), a shock (across which all variables may be
 discontinuous), or a rarefaction (along which the variables vary continuously
 between their values on either side of the wave).
 The number and form of the waves are determined by the governing equations
 and the initial conditions.
 The states of the variables either side of the contact discontinuity in
 the middle are known as the 
\shape italic
star states
\shape default
.
 This qualitative description is depicted in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:RiemannProblem"

\end_inset

.
\end_layout

\begin_layout Standard
Liu et al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Liu2003"

\end_inset

 demonstrated that the original GFM fails to resolve strong shocks at material
 interfaces.
 This is because the method effectively solves two separate single-fluid
 Riemann problems.
 The waves present in these Riemann problems do not necessarily correspond
 to those in the real Riemann problem across the interface.
 The Riemann Ghost Fluid Method of Sambasivan et al.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Sambasivan2009"

\end_inset

 aims to rectify this.
\end_layout

\begin_layout Standard
Given 
\begin_inset Formula $\boldsymbol{P^{n}}$
\end_inset

 and 
\begin_inset Formula $x_{n}\in\left[\left(i+\frac{1}{2}\right)\Delta x,\left(i+\frac{3}{2}\right)\Delta x\right]$
\end_inset

, the ghost cells for fluid 1 are populated with the left star state of
 
\begin_inset Formula $RP\left(\boldsymbol{P_{i-1}^{n}},\boldsymbol{P_{i+2}^{n}}\right)$
\end_inset

, and the ghost cells for fluid 2 are populated with the right star state.
 
\begin_inset Formula $RP\left(\boldsymbol{P_{i-1}^{n}},\boldsymbol{P_{i+2}^{n}}\right)$
\end_inset

 is solved rather than 
\begin_inset Formula $RP\left(\boldsymbol{P_{i}^{n}},\boldsymbol{P_{i+1}^{n}}\right)$
\end_inset

, as 
\begin_inset Formula $\boldsymbol{P_{i}^{n}},\boldsymbol{P_{i+1}^{n}}$
\end_inset

 often contain errors generated by the fact that they lie on the material
 interface.
 
\begin_inset Formula $\boldsymbol{P^{n+1}}$
\end_inset

 is then generated as before from the newly formed 
\begin_inset Formula $\boldsymbol{P^{\left(1\right)}},\boldsymbol{P^{\left(2\right)}}$
\end_inset

.
 This process is demonstrated in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:RiemannGFM"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename RGFM.png
	lyxscale 50
	width 50text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:RiemannGFM"

\end_inset

The Riemann Ghost Fluid Method
\end_layout

\end_inset


\begin_inset VSpace medskip
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Branch ChildOnly
status collapsed

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "../references"
options "plain"

\end_inset


\end_layout

\end_inset


\end_layout

\end_body
\end_document
